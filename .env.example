# =============================================================================
# TOGEDDA - ENVIRONMENT VARIABLES
# =============================================================================
# Copy this file to .env.local and fill in your actual values

# =============================================================================
# REQUIRED VARIABLES
# =============================================================================

# Application URL (required for Farcaster manifest and redirects)
NEXT_PUBLIC_URL=http://localhost:3000

# Farcaster MiniKit Project ID (get from Farcaster Developer Portal)
NEXT_PUBLIC_MINIKIT_PROJECT_ID="togedda"

# Neynar API Key (required for Farcaster authentication)
# Get from: https://neynar.com
NEYNAR_API_KEY="your_neynar_api_key_here"

# BaseScan API Key (required for contract verification)
# Get from: https://basescan.org/apis
BASESCAN_API_KEY="your_basescan_api_key_here"

# Neynar Client ID (required for web app Farcaster authentication)
# Get from: https://dev.neynar.com
NEXT_PUBLIC_NEYNAR_CLIENT_ID="your_neynar_client_id_here"

# WalletConnect Project ID (required for wallet connections in web app)
# Get from: https://cloud.walletconnect.com
NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID="your_walletconnect_project_id_here"

# JWT Secret for session management (generate a random string)
JWT_SECRET="your_random_jwt_secret_here_at_least_32_chars"

# Farcaster Account Association (required for Mini App publishing)
# Generate these using: https://warpcast.com/~/developers/mini-apps/manifest
NEXT_PUBLIC_FARCASTER_HEADER="your_farcaster_header"
NEXT_PUBLIC_FARCASTER_PAYLOAD="your_farcaster_payload"
NEXT_PUBLIC_FARCASTER_SIGNATURE="your_farcaster_signature"

# =============================================================================
# OPTIONAL - DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database URL (for user data and streaks)
# Format: postgresql://username:password@host:port/database
DATABASE_URL="postgresql://user:password@localhost:5432/togedda"
POSTGRES_URL="postgresql://user:password@localhost:5432/togedda"

# =============================================================================
# OPTIONAL - REDIS CONFIGURATION (for notifications and caching)
# =============================================================================

# Redis configuration (required for notifications and background tasks)
# Get from: https://upstash.com or use local Redis
REDIS_URL="redis://localhost:6379"
REDIS_TOKEN="your_redis_token"

# =============================================================================
# OPTIONAL - EXTERNAL SERVICES
# =============================================================================

# Web3.bio API Key (for enhanced profile data)
# Get from: https://web3.bio
WEB3_BIO_API_KEY="your_web3bio_api_key"

# =============================================================================
# EXTERNAL DATA APIS (for auto-resolving predictions)
# =============================================================================

# CoinMarketCap API Key (for crypto price data)
# Get from: https://coinmarketcap.com/api/
COINMARKETCAP_API_KEY="your_coinmarketcap_api_key"

# CoinGecko API Key (optional, has free tier)
# Get from: https://www.coingecko.com/en/api
COINGECKO_API_KEY="your_coingecko_api_key"

# OpenWeather API Key (for weather predictions)
# Get from: https://openweathermap.org/api
OPENWEATHER_API_KEY="your_openweather_api_key"

# TimeZoneDB API Key (for timezone detection)
# Get from: https://timezonedb.com/api
TIMEZONEDB_API_KEY="your_timezonedb_api_key"

# Sports Data APIs (optional)
ESPN_API_KEY="your_espn_api_key"
SPORTSDATA_API_KEY="your_sportsdata_api_key"

# Location Services (optional)
GOOGLE_MAPS_API_KEY="your_google_maps_api_key"
MAPBOX_API_KEY="your_mapbox_api_key"

# =============================================================================
# XMTP AI BOT CONFIGURATION (for prediction market chat bot)
# =============================================================================

# Bot's private key for XMTP messaging (required for AI bot)
# Generate using: node -e "const { generateKeys } = require('./lib/ai-bot-service'); console.log(generateKeys());"
BOT_PRIVATE_KEY="0x1234567890abcdef..."

# Encryption key for XMTP local database (required for AI bot)
ENCRYPTION_KEY="0xabcdef1234567890..."

# XMTP environment: 'dev', 'production', or 'local' (required for AI bot)
XMTP_ENV="dev"

# OpenAI API key for AI responses (required for AI bot)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY="sk-..."

# AI Model API endpoint (optional, defaults to OpenAI)
AI_MODEL_API="https://api.openai.com/v1/chat/completions"

# Base Mainnet RPC URL (optional, has default)
BASE_MAINNET_RPC_URL="https://mainnet.base.org"

# Bot's XMTP address (optional, derived from private key)
PREDICTION_BOT_XMTP_ADDRESS="0x..."

# =============================================================================
# UNIFIED SMART CONTRACT ADDRESSES (PRODUCTION READY)
# =============================================================================

# Unified Prediction Market Contracts (identical on both networks)
# CELO Mainnet (Production)
CELO_PREDICTION_MARKET_ADDRESS="0xa226c82f1b6983aBb7287Cd4d83C2aEC802A183F"

# Base Mainnet (Production - SweatEquityBot)
BASE_MAINNET_PREDICTION_MARKET_ADDRESS="0x89ED0a9739801634A61e791aB57ADc3298B685e9"
BASE_MAINNET_SWEAT_EQUITY_BOT_ADDRESS="0x89ED0a9739801634A61e791aB57ADc3298B685e9"

# Base Sepolia (Legacy - DEPRECATED)
BASE_SEPOLIA_PREDICTION_MARKET_ADDRESS="0x0c38f4bd68d3f295F1C38eED3af96328Ce4CE2dB"

# Legacy contract addresses (DEPRECATED - do not use)
# LEGACY_CELO_ADDRESS="0x4d6b336F174f17daAf63D233E1E05cB105562304"
# LEGACY_BASE_ADDRESS="0xeF7009384cF166eF52e0F3529AcB79Ff53A2a3CA"

# Fitness Tracking Contract Address (deploy your own or use existing)
NEXT_PUBLIC_FITNESS_CONTRACT_ADDRESS="0x..."

# =============================================================================
# OPTIONAL - FEATURE FLAGS
# =============================================================================

# Enable/disable notifications system
NEXT_PUBLIC_ENABLE_NOTIFICATIONS="false"

# Enable/disable prediction markets
NEXT_PUBLIC_ENABLE_PREDICTIONS="false"

# Enable/disable analytics tracking
NEXT_PUBLIC_ENABLE_ANALYTICS="false"

# Enable/disable external data APIs for prediction resolution
ENABLE_EXTERNAL_PRICE_DATA="true"
ENABLE_WEATHER_PREDICTIONS="true"
ENABLE_LOCATION_CONTEXT="true"
ENABLE_TIMEZONE_DETECTION="true"

# Enable/disable enhanced address resolution
ENABLE_WEB3BIO_FALLBACK="true"
ENABLE_ENSDATA_FALLBACK="true"

# =============================================================================
# OPTIONAL - DEVELOPMENT SETTINGS
# =============================================================================

# Application environment
NEXT_PUBLIC_APP_ENV="development"

# Enable debug mode for additional logging
NEXT_PUBLIC_DEBUG_MODE="false"

# Node environment (automatically set by Next.js)
NODE_ENV="development"

# Skip environment validation during build (use with caution)
SKIP_ENV_VALIDATION="false"

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. Copy this file to .env.local
# 2. Fill in the required variables above
# 3. Get your Farcaster manifest variables:
#    - Go to https://warpcast.com/~/developers/mini-apps/manifest
#    - Enter your domain (NEXT_PUBLIC_URL)
#    - Copy the generated header, payload, and signature
# 4. Set up external services as needed (Neynar, Redis, etc.)
# 5. Deploy contracts if using blockchain features
# 6. Test your configuration with: npm run dev
#
# For production deployment:
# - Set NEXT_PUBLIC_APP_ENV="production"
# - Use production URLs and API keys
# - Enable features as needed
# - Set up proper database and Redis instances
#
# =============================================================================
